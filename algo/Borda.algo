algorithme voteBorda
debut

    declarer tabCandidatNom : tableau_de nombreCandidat string;
    declarer nombreCandidat : entier;
    declarer tabCandidatPoint : tableau_de nombreCandidat entier_naturel;
    declarer candidat : string;

    declarer nombreElecteurs : entier

procedure  presentation (candidat: in string)
debut
    cout << "Bienvenue au scrutin de vote n°42 pour l'élection présidentielle" << "\n"
     << "Voici la liste des candidats :" << endl;
    cout << nomCandidat;
    cout << "Voici les règles : - Vous devez ordonnée dans une liste le nom des candidats par préférence de vote" << "\n"
     << "                   - Plus votre candidat est haut dans la liste, plus il obtiendra de points !" << "\n"
     << "                   - Le candidat ayant le plus de point gagne !" << "\n"
     << endl;
    cout << "Bon Vote !!!";
fin
 
    afficher("Veuillez rentrez le nombre de candidat qui participent : ", ligne_suivante);
    saisir(nombreCandidat);
    declarer tabCandidat : tableau_de nombreCandidat entier;
    declarer CandidatX : string;
    declarer pointMax : entier <- (nombreCandidat-1) ;
    pour(i variant de 0 a taille(tabCandidat) - 1)
    faire
        afficher("Donner le nom du ", i,"eme candidat :");
        saisir(CandidatX);
        tabCandidatNom[i] <- CandidatX;
    ffaire

    PointAdonner(tabCandidat,tabCandidatPoint);
fin

procedure PointADonner(tabCandidat: in tableau_de string, tabCandidatPoint: out tableau_de entier_naturel)
debut
    declarer choix : string;
    pour(i variant_de 0 a taille(tabCandidat)-1)
    faire
        afficher("Veuillez saisir le candidat que vous voulez placer en", i ,"er de la liste :" ligne_suivante );
        saisir(choix[i]);

        pour(k variant de 0 a taille(tabCandidat)-1)
        faire
            si(choix[i] vaut tabCandidat[k])
                tabCandidatPoint[k] <- tabCandidatPoint + (nombreCandidat-compteur);
            sinon_si(choix[i] ne_vaut_pas tabCandidat[k] ET_ALORS k vaut taille(tabCandidat)-1 )
                tabCandidatPoint[k] <- tabCandidatPoint +0;
        ffaire
        compteur <- i+1;
    ffaire
fin
